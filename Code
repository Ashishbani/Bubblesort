//We are given with an input array which is supposed to be sorted in ascending order
//We start with the first element and i=0 index and check if the element present at i+1 is greater then we swap the elements at index i and i+1.
//If above is not the case, then no swapping will take place.
//Now  “ i ” gets incremented and the above 2 steps happen again until the array is exhausted.
//We will ignore the last index as it is already sorted.
//Now the largest element will be at the last index of the array.
//Now we will again set i=0 and continue with the same steps that will eventually place second largest at second last place in the array. Now the last 2 indexes of the array are sorted.

#include <bits/stdc++.h> 
using namespace std; 

void swap(int *xp, int *yp)  
{  
    int temp = *xp;  
    *xp = *yp;  
    *yp = temp;  
}  

void algorithm(int arr[])  
{   
    int n = sizeof(arr)/sizeof(arr[0]);  
    int i, j;  
    for (i = 0; i < n-1; i++)       
    for (j = 0; j < n-i-1; j++)  
        if (arr[j] > arr[j+1])  
            swap(&arr[j], &arr[j+1]);  
}  

void printArray(int arr[])  
{  
    int i;  
    int n = sizeof(arr)/sizeof(arr[0]);  
    for (i = 0; i < n; i++)  
        cout << arr[i] << " ";  
    cout << endl;  
} 

int main()  
{  
    int arr[] = {83,1,45,95,45,52,11,47,0,45,67,82};
    algorithm(arr);  
    cout << "Sorted array: \n";  
    printArray(arr);  
    return 0;  
}  
